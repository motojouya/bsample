input SendEmailInput {
  email: String!
}

union SendEmailReturn = String | RecordAlreadyExistError

input VerifyEmailInput {
  register_session_id: ID
  email: String!
  email_pin: Email!
}

union VerifyEmailReturn = Boolean | RecordNotFoundError

input RegisterInput {
  register_session_id: ID!
  name: String!
  email: String!
  password: String!
}

union RegisterReturn = User | RecordNotFoundError

input LoginInput {
  id: ID!
  password: String!
}

input UserInput {
  name: String!
}

input EmailInput {
  email: String!
}

union EmailChangeReturn = User | RecordNotFoundError

input PasswordInput {
  password: String!
}

type Mutation {
  sendEmail(input: SendEmailInput): SendEmailReturn
  verifyEmail(input: VerifyEmailInput): VerifyEmailReturn
  register(input: RegisterInput): RegisterReturn
  login(input: LoginInput): User
  changeUserInformation(input: UserInput!): User
  changeEmail(input: EmailInput!): EmailChangeReturn
  changePassword(input: PasswordInput!): User
}

type Query {
  loginUser: User
}
