version: '3.1'

services:
  front:
    build:
      context: "./front"
      args:
        - UID
        - GID
        - USERNAME=bsample
        - GROUPNAME=bsample
    tty: true
    volumes:
      - "./front:/srv"
    depends_on:
      - server
    links:
      - "server:server"
    # command: sh -c "npm run dev"
    ports:
      - "3000:3000"
  server:
    build:
      context: "./server"
      args:
        - UID
        - GID
        - USERNAME=bsample
        - GROUPNAME=bsample
    tty: true
    depends_on:
      - rdb
      - memory
    volumes:
      - "./server:/srv"
    # command: sh -c "npm run dev"
    links:
      - "rdb:rdb"
      - "memory:memory"
    environment:
      PORT: 3000
      NODE_ENV: develop
      SESSION_SECRET: secret
      PG_USER: bsample
      PG_PASSWORD: bsample
      PG_DATABASE: bsample
      PG_HOST: rdb
      PG_PORT: 5432
      REDIS_HOST: memory
      REDIS_PORT: 6379
  rdb:
    build:
      context: "./rdb"
      args:
        - UID
        - GID
        - USERNAME=bsample
        - GROUPNAME=bsample
    restart: always
    environment:
      POSTGRES_USER: bsample
      POSTGRES_PASSWORD: bsample
      POSTGRES_DB: bsample
    volumes:
      - rdb:/var/lib/postgresql/data
    # ports:
    #   - "5432:5432"
  memory:
    build:
      context: "./memory"
      args:
        - UID
        - GID
        - USERNAME=bsample
        - GROUPNAME=bsample
    # ports:
    #   - "6379:6379"
#  front_test:
#    depends_on:
#      - front
#    build: "./front_test"
#    volumes:
#      - "~/Develop/tabinote/test:/usr/local/src/tabinote"
#    links:
#      - "front:front"
#    environment:
#    command: "dockerize -timeout 60s -wait tcp://rdb:5432 npm run test"
#  server_test:
#    depends_on:
#      - rdb
#      - server
#    build: "./server_test"
#    volumes:
#      - "~/Develop/tabinote/test:/usr/local/src/tabinote"
#    links:
#      - "rdb:rdb"
#      - "server:server"
#    environment:
#      PG_USER: postgres
#      PG_PASS: postgres
#      PG_NAME: hotline
#      PG_HOST: rdb
#      PG_PORT: 5432
#      PGPASSWORD: postgres
#      APP_HOST: app
#      APP_PORT: 3000
#    command: "dockerize -timeout 60s -wait tcp://rdb:5432 npm run test"
volumes:
  rdb:
